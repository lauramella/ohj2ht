package music2.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import music2.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.20 19:55:25 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KappaleTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi83 */
  @Test
  public void testRekisteroi83() {    // Kappale: 83
    Kappale kappale1 = new Kappale(); 
    assertEquals("From: Kappale line: 85", 0, kappale1.getTunnusNro()); 
    kappale1.rekisteroi(); 
    Kappale kappale2 = new Kappale(); 
    kappale2.rekisteroi(); 
    int n1 = kappale1.getTunnusNro(); 
    int n2 = kappale2.getTunnusNro(); 
    assertEquals("From: Kappale line: 91", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta151 */
  @Test
  public void testAseta151() {    // Kappale: 151
    Kappale kappale = new Kappale(); 
    assertEquals("From: Kappale line: 153", null, kappale.aseta(1,"Alex Pervukhin")); 
    assertEquals("From: Kappale line: 154", null, kappale.aseta(2,"This for B")); 
    assertEquals("From: Kappale line: 155", null, kappale.aseta(3,"Vinyl")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone232 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone232() throws CloneNotSupportedException {    // Kappale: 232
    Kappale kappale = new Kappale(); 
    kappale.parse("   3  |  Alex Pervukhin   | This For B"); 
    Kappale kopio = kappale.clone(); 
    assertEquals("From: Kappale line: 237", kappale.toString(), kopio.toString()); 
    kappale.parse("   4  |  artisti2  | biisi1"); 
    assertEquals("From: Kappale line: 239", false, kopio.toString().equals(kappale.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals255 */
  @Test
  public void testEquals255() {    // Kappale: 255
    Kappale kappale1 = new Kappale(); 
    kappale1.parse("   3  |  Alex   | This For B"); 
    Kappale kappale2 = new Kappale(); 
    kappale2.parse("   3  |  Alex   | This For B"); 
    Kappale kappale3 = new Kappale(); 
    kappale3.parse("   3  |  Alex   | Juuu"); 
    assertEquals("From: Kappale line: 263", true, kappale1.equals(kappale2)); 
    assertEquals("From: Kappale line: 264", true, kappale2.equals(kappale1)); 
    assertEquals("From: Kappale line: 265", false, kappale1.equals(kappale3)); 
    assertEquals("From: Kappale line: 266", false, kappale3.equals(kappale2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetName305 */
  @Test
  public void testGetName305() {    // Kappale: 305
    Kappale kap = new Kappale(); 
    kap.taytaKappaleTiedoilla(); 
    { String _l_=kap.getName(),_r_="Alex Pervukhin .*"; if ( !_l_.matches(_r_) ) fail("From: Kappale line: 308" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString320 */
  @Test
  public void testToString320() {    // Kappale: 320
    Kappale kappale = new Kappale(); 
    kappale.parse("   3  |  Alex   | This For B"); 
    assertEquals("From: Kappale line: 323", true, kappale.toString().startsWith("3|Alex|This For B|"));  // on enemmkin kuin 3 kentt‰‰, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse365 */
  @Test
  public void testParse365() {    // Kappale: 365
    Kappale kappale = new Kappale(); 
    kappale.parse("   3  |  Guy From Downstairs   | Nokia"); 
    assertEquals("From: Kappale line: 368", 3, kappale.getTunnusNro()); 
    assertEquals("From: Kappale line: 369", true, kappale.toString().startsWith("3|Guy From Downstairs|Nokia|"));  // on enemmkin kuin 3 kentt‰‰, siksi loppu |
    kappale.rekisteroi(); 
    int n = kappale.getTunnusNro(); 
    kappale.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kappale.rekisteroi();  // ja tarkistetaan ett seuraavalla kertaa tulee yht‰ isompi
    assertEquals("From: Kappale line: 375", n+20+1, kappale.getTunnusNro()); 
  } // Generated by ComTest END
}